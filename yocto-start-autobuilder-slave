#!/usr/bin/env python
#
# Yocto Build Server Start Script
# Elizabeth Flanagan <elizabeth.flanagan@intel.com>
#
##
# Copyright (C) 2011-2012 Intel Corp.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

import os, sys, optparse, subprocess
from socket import gethostname
import ConfigParser

usage  = """%prog [options] master|slave|both   

Start a yocto buildbot autobuilder instance.
"""

parser = optparse.OptionParser(usage=usage)
options, args = parser.parse_args( sys.argv )

AB_BASE=os.path.dirname(os.path.abspath(sys.argv[0]))

################################################################################
#
# We need to check if they've run setup before. If they haven't, we fail out.
#
################################################################################
if os.path.isfile(os.path.join(AB_BASE, ".setupdone")):

    from ConfigParser import SafeConfigParser

    parser = SafeConfigParser()
    parser.read('conf/autobuilder.conf')
    print
    print "Reading " + os.path.join(AB_BASE, "conf/autobuilder.conf")
    print
    os.environ["SLAVEBASEDIR"] = AB_BASE.strip('"') + "/yocto-slave"
    print ' Setting %s to %s' % ("SLAVEBASEDIR", AB_BASE + "/yocto-slave")
    for section_name in parser.sections():
        for name, value in parser.items(section_name):
            print ' Setting %s to %s' % (name.upper(), value)
            os.environ[name.upper()] = value.strip('"')
            if os.environ[name.upper()].endswith("_DIR"):
                if not os.path.exists(value):
                    try:
                        os.mkdirs(value)
                        print ' Creating %s at %s' % (name.upper(), value)
                    except:
                        pass
    print

os.chdir(os.path.join(AB_BASE, "yocto-slave"))
subprocess.call(["make", "start"])
os.chdir(AB_BASE)
